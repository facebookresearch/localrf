apiVersion: batch/v1
kind: Job
metadata:
  name: 'uberlapse-prep'
spec:
  ttlSecondsAfterFinished: 60
  completions: 15
  parallelism: 15
  completionMode: Indexed
  template:
    spec:
      restartPolicy: Never
      containers:
      - name: uberlapse
        resources:
          limits:
            cpu: 8
            memory: 32Gi
            nvidia.com/gpu: 1
        image: "dtr.thefacebook.com/ameuleman/uberlapse:latest"
        volumeMounts:
        - name: uberlapse
          mountPath: /mnt/uberlapse
        command:
          - "bash"
          - "-c"
          - |
            cd /mnt/uberlapse/ameuleman
            SCENES=(ours/uw1 ours/uw2  ours/uw3 ours/uw4 ours/lake22_1 ours/lake22_2 ours/lake22_3  ours/lake22_4 ours/pg ours/hike_07_08_gopro_4 ours/hike_09_26_7 ours/hike_1008_4 ours/hike_1008_6 ours/hike_1008_2 ours/hike_09_26_1)
            SKIPS=(0 0 0 0 0 0 0 2 0 2 0 3 3 2 0)
            SCENE=${SCENES[$JOB_COMPLETION_INDEX]}
            SKIP=${SKIPS[$JOB_COMPLETION_INDEX]}
            MAX_FRAMES=(1000 1000 1000 1000 1100 1100 1100 1100 1000 1000 1000 1000 1000 1000 1500)
            MAX_FRAME=${MAX_FRAMES[$JOB_COMPLETION_INDEX]}
            python preprocess_video.py --video_name $SCENE --multiGPU 0 --skip $SKIP --max_frames ${MAX_FRAME}
            cd DPT
            SCENE_NAME=${SCENE}/skip_${SKIP}
            python run_monodepth.py --input_path ../data/sequenced/${SCENE_NAME}/images \
            --output_path ../data/sequenced/${SCENE_NAME}/depth --model_type dpt_large
            cd ../
            ffmpeg -y -framerate 30 -pattern_type glob -i "data/sequenced/${SCENE_NAME}/images/*.jpg" -c:v libx264 -pix_fmt yuv420p data/sequenced/${SCENE_NAME}/in.mp4
      volumes:
      - name: uberlapse
        persistentVolumeClaim:
          claimName: uberlapse
      priorityClassName: high

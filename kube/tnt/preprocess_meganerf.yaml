apiVersion: batch/v1
kind: Job
metadata:
  name: 'uberlapse-prep-meganerf'
spec:
  ttlSecondsAfterFinished: 60
  completions: 3
  parallelism: 3
  completionMode: Indexed
  template:
    spec:
      restartPolicy: OnFailure
      containers:
      - name: uberlapse
        resources:
          limits:
            cpu: 16
            memory: 96Gi
            nvidia.com/gpu: 1
        image: "dtr.thefacebook.com/ameuleman/meganerf:latest"
        volumeMounts:
        - name: uberlapse
          mountPath: /mnt/uberlapse
        command:
          - "bash"
          - "-c"
          - |
            cd /mnt/uberlapse/ameuleman
            SCENES=(train/Ignatius train/Meetingroom train/Truck)
            SKIPS=(4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4)
            SCENE=${SCENES[$JOB_COMPLETION_INDEX]}
            SKIP=${SKIPS[$JOB_COMPLETION_INDEX]}
            SCENE_NAME=${SCENE}/skip_${SKIP}
            cd comparison/mega-nerf
            rm -rf ../../data/logs_eval/meganerf/${SCENE_NAME}
            python scripts/colmap_to_mega_nerf.py --model_path ../../data/sequenced/${SCENE_NAME}/sparse/0 --images_path ../../data/sequenced/${SCENE_NAME}/images --output_path ../../data/logs_eval/meganerf/${SCENE_NAME} --scale 6
            python scripts/create_cluster_masks.py --config configs/mega-nerf/quad.yaml --dataset_path ../../data/logs_eval/meganerf/${SCENE_NAME}  --output ../../data/logs_eval/meganerf/${SCENE_NAME}/masks --grid_dim 2 2
      volumes:
      - name: uberlapse
        persistentVolumeClaim:
          claimName: uberlapse
      priorityClassName: high
